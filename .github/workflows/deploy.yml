name: Deploy

on:
  release:
    types:
      - created
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  LAMBDA_FUNCTION_NAME: potiguana-ufrn-bot
  PACKAGE_DIR: package
  PYTHON_VERSION: python3.11
  REQUIREMENTS_FILE: requirements.txt
  PACKAGE_ZIP: package.zip
  LAMBDA_BUCKET: potiguana-bot-packages
  LAYER_NAME: potiguana-requirements-layer

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Upload Dependencies
      run: |
        pip install -q pipenv
        pipenv requirements > ${{ env.REQUIREMENTS_FILE }}
        sudo rm -rf ${{ env.PACKAGE_DIR }}
        mkdir -p ${{ env.PACKAGE_DIR }}/python/lib/${{ env.PYTHON_VERSION }}/site-packages
        pip install -r ${{ env.REQUIREMENTS_FILE }} -t ${{ env.PACKAGE_DIR }}/python/lib/${{ env.PYTHON_VERSION }}/site-packages --upgrade -qqq
        cd ${{ env.PACKAGE_DIR }}
        zip -rq ../${{ env.PACKAGE_ZIP }} .
        cd ..
        aws s3 cp ${{ env.PACKAGE_ZIP }} s3://${{ env.LAMBDA_BUCKET }}/${{ env.PACKAGE_ZIP }}

    - name: Deploy Lambda Layer
      run: |
        LAYER_VERSION=$(aws lambda publish-layer-version \
          --layer-name ${{ env.LAYER_NAME }} \
          --content S3Bucket=${{ env.LAMBDA_BUCKET }},S3Key=${{ env.PACKAGE_ZIP }} \
          --compatible-runtimes ${{ env.PYTHON_VERSION }} \
          --query 'Version' --output text)
        echo "LAYER_VERSION=$LAYER_VERSION" >> $GITHUB_ENV

    - name: Package Lambda Code
      working-directory: ./src
      run: |
        zip -r ../deployment-package.zip .  # Compacta apenas o conteÃºdo de `src`

    - name: Deploy Lambda Layer
      working-directory: ./src
      run: |
        aws lambda update-function-configuration \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --layers arn:aws:lambda:${{ env.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:layer:${{ env.LAYER_NAME }}:$LAYER_VERSION

    - name: Wait for Lambda Update
      run: |
        echo "Waiting for Lambda update to complete..."
        STATUS="Updating"
        while [ "$STATUS" == "Updating" ]; do
          sleep 5
          STATUS=$(aws lambda get-function-configuration --function-name ${{ env.LAMBDA_FUNCTION_NAME }} --query 'State' --output text)
          echo "Current status: $STATUS"
        done
        echo "Lambda update completed."

    - name: Deploy Lambda Code
      working-directory: ./src
      run: |
        aws lambda update-function-code \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --zip-file fileb://../deployment-package.zip > /dev/null
